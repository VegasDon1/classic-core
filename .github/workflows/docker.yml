name: Build & Push
# Build & Push builds the simapp docker image on every push to master and
# and pushes the image to https://hub.docker.com/r/interchainio/simapp/tags
on:
  pull_request:
  push:
    branches:
      - main
      - "release/*"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+" # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      terraclassic_terrad_binary: terrarebels/terraclassic.terrad-binary
      terraclassic_terrad_node: terrarebels/terraclassic.terrad-node
    steps:
      - uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Prepare
        id: prep
        run: |
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=latest
            fi
          fi
          CORE_TAGS="${terraclassic_terrad_binary}:${VERSION}"
          CORE_NODE_COLUMBUS_5_TAGS="${terraclassic_terrad_node}:${VERSION}-columbus-5"
          CORE_REBEL_1_TAGS="${terraclassic_terrad_binary}:${VERSION}-rebel-1"
          CORE_NODE_REBEL_1_TAGS="${terraclassic_terrad_node}:${VERSION}-rebel-1"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            CORE_TAGS="$CORE_TAGS,${terraclassic_terrad_binary}:${VERSION}"
            CORE_NODE_COLUMBUS_5_TAGS="$CORE_NODE_COLUMBUS_5_TAGS,${terraclassic_terrad_node}:${VERSION}-columbus-5"
            CORE_REBEL_1_TAGS="$CORE_REBEL_1_TAGS,${terraclassic_terrad_binary}:${VERSION}-rebel-1"            
            CORE_NODE_REBEL_1_TAGS="$CORE_NODE_REBEL_1_TAGS,${terraclassic_terrad_node}:${VERSION}-rebel-1"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=core_tags::${CORE_TAGS}
          echo ::set-output name=core_rebel_1_tags::${CORE_REBEL_1_TAGS}
          echo ::set-output name=core_node_columbus_5_tags::${CORE_NODE_COLUMBUS_5_TAGS}
          echo ::set-output name=core_node_rebel_1_tags::${CORE_NODE_REBEL_1_TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to terrarebels DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish terraclassic.terrad-binary (columbus-5) Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' && !contains(github.ref, 'release') }}
          tags: ${{ steps.prep.outputs.core_tags }}
          file: Dockerfile.terraclassic.terrad-binary
      
      - name: Publish terraclassic.terrad-binary (rebel-1) Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' && !contains(github.ref, 'release') }}
          tags: ${{ steps.prep.outputs.core_rebel_1_tags }}
          file: Dockerfile.terraclassic.terrad-binary
      
      - name: Publish terraclassic.terrad-node (columbus-5) Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' && !contains(github.ref, 'release') }}
          tags: ${{ steps.prep.outputs.core_node_columbus_5_tags }}
          context: docker
          file: docker/Dockerfile
          build-args: |
            base_image=${{ env.terraclassic_terrad_binary }}
            version=${{ steps.prep.outputs.version }}
            chainid=columbus-5

      - name: Publish terraclassic.terrad-node (rebel-1) Image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' && !contains(github.ref, 'release') }}
          tags: ${{ steps.prep.outputs.core_node_rebel_1_tags }}
          context: docker
          file: docker/Dockerfile
          build-args: |
            base_image=${{ env.terraclassic_terrad_binary }}
            version=${{ steps.prep.outputs.version }}-rebel-1
            chainid=rebel-1
